#!/bin/bash
#
# Copyright (C) 2016 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

logcat=$1
str_res=""
res=0

packagename=$(basename `cd $packagedir ; pwd`)
metapackagename=$(dirname `cd $packagedir ; pwd`)
testname=${PWD##*/}
packagename=${PWD%%/$testname}
packagename=${packagename##*/}
metapackagename=${PWD%%/$packagename/$testname}
metapackagename=${metapackagename##*/}

pcgdir=`echo "$(cd $(dirname $0); pwd)/../"`
testdir=${pcgdir}/${testname}

resultsdir=$(dirname $logcat)


function Exit()
{

   if [ ! $1 = 0 ]; then
       echo -e "FAILED:\n"$2
       
   else 
       echo -e "PASSED:\n"$2
   fi

   exit $1
}



function ExpectedApplied_postproc() {
    expectedMessage="$1"
    methodName="$2"
    unexpectedMessage="$3"
    expectedMessageCount="$4"

    expectedMessageFoundTimes=`cat ${logcat} | grep "${methodName}" | grep "${expectedMessage}" | wc -l`
    if [[ "x${expectedMessageFoundTimes}" == "x${expectedMessageCount}" ]] ; then 
        str_res+="EXPECTED: message \""${expectedMessage}"\" found for method $methodName ${expectedMessageFoundTimes} times;\n"
        res=$((res + 0))
    else
        str_res+="UNEXPECTED: message \""${expectedMessage}"\" found for method $methodName ${expectedMessageFoundTimes} times, but expected ${expectedMessageCount} times;\n"
        res=$((res + 1))
    fi


}





#Clean-up results dir before processing logcat:
rm -f ${logcat}_*

#Iterate over methods:
# parsing 'methodName:expectedMessage==count!unexpectedMessage==count'
for str in "${testMethodsCounts[@]}" ; do
     methodName="${str%:*}"
     expectedMessage="${str#*:}"
     if [[ $str =~ .*!.* ]] ; then 
         expectedMessage="${expectedMessage%!*}"
         unexpectedMessage="${str#!*}"
     else
        unexpectedMessage=""
    fi
    if [[ $expectedMessage =~ .*==.* ]] ; then 
        expectedMessageCount="${expectedMessage#*==}"
        expectedMessage="${expectedMessage%==*}"
    else 
        expectedMessageCount="1"
    fi

     methodName=`echo ${methodName} | sed "s/\([a-zA-Z]*\) \(.*\)/\1 ${metapackagename}.${packagename}.${testname}.Main.\2/"`
     ExpectedApplied_postproc "${expectedMessage}" "${methodName}" "${unexpectedMessage}" "${expectedMessageCount}"  

done

Exit $((res)) "$str_res"

   


