#!/bin/bash
#
# Copyright (C) 2016 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

logcat=$1

function Exit()
{
   echo $2
   exit $1
}

echo
echo "Find messages about unrolled loops in the 'testLoop' method:"
# example:
# I dex2oat : loop_full_unrolling: Loop #3 of method int OptimizationTests.LoopUnrolling.RangeCheckSetterTryCatch.Main.testLoop() has been successfully fully unrolled by factor 10

messages=`cat ${logcat} | grep -E "loop_full_unrolling: Loop #[0-9]+ of method [int|long|boolean|char]+ OptimizationTests.${pckgname}.${testname}.Main.testLoop(.*) has been successfully fully unrolled by factor [0-9]+"`
count=`echo $messages | wc -l`
[ $count -ne 1 ] && Exit 1 "FAILED: the message was printed $count times"
echo $messages
echo "OK: 1 message found"

echo
echo "Find messages about unrolled loops in the 'testTryCatch' method:"
# example:
# I dex2oat : loop_full_unrolling: Loop #27 of method int OptimizationTests.LoopUnrolling.RangeCheckSetterTryCatch.Main.testTryCatch() has been successfully fully unrolled by factor 10

messages=`cat ${logcat} | grep "has been successfully fully unrolled by factor" | grep "testTryCatch"`
count=`cat ${logcat} | grep "has been successfully fully unrolled by factor" | grep "testTryCatch" | wc -l`

echo "$count messages found."

if [ $count -ne 6 ]; then
    echo `cat ${logcat} | grep "testTryCatch"`
    Exit 1 "FAILED: expected 6 messages but found $count messages."
fi
echo $messages
Exit 0 "PASSED: Loop has been successfully fully unrolled"
